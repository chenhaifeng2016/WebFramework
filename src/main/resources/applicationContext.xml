<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--
    <context:annotation-config />
    -->

    <context:component-scan base-package="com.cssweb.account.service"/>
    <context:component-scan base-package="com.cssweb.omp.idm.service"/>


    <!--
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:init-config.properties" />
    </bean>
    -->

    <context:property-placeholder location="classpath:mysql.properties, classpath:oracledb.properties" />

    <!-- 配置mysql数据源 -->
	<bean id="mysql" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >

        <property name="driverClassName" >
            <value>${mysql.jdbc.driverClassName}</value>
        </property>
        <property name="url">
            <value>${mysql.jdbc.url}</value>
        </property>
        <property name="username">
            <value>${mysql.jdbc.username}</value>
        </property>
        <property name="password">
            <value>${mysql.jdbc.password}</value>
        </property>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间
        <property name="maxWait" value="60000" />-->

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        <property name="timeBetweenEvictionRunsMillis" value="60000" />-->

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />-->

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
-->
        <!-- 配置监控统计拦截的filters
        <property name="filters" value="stat" />
         -->
    </bean>




    <!-- MyIbatis -->
    <bean id="sqlSessionFactoryMySql" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="mysql"/>
        <property name="configLocation" value="classpath:myBatis.xml" />
        <property name="mapperLocations" value="classpath:com/cssweb/omp/idm/mapper/*.xml" />
    </bean>

    <!-- <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> <constructor-arg index="0"> <ref bean="sqlSessionFactory"/>
                </constructor-arg> </bean> -->

    <!--MyIbatis接口映射器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryMySql" />
        <property name="basePackage" value="com.cssweb.omp.idm.mapper"/>
        <!--直接指定了sqlsessionTemplate名称，这个和上面的其实是一样的 -->
        <!-- <property name="sqlSessionTemplateBeanName" value="sqlSession" /> -->
    </bean>


	<!-- 配置事务管理器 -->
    <bean id="transactionManagerMySQL" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
        <property name="dataSource" ref="mysql" />
    </bean>

    <!--注解式事务-->
    <tx:annotation-driven transaction-manager="transactionManagerMySQL"/>

	<!-- 声明式事务
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod" expression="execution(* com.cssweb.core.webframework.service..*(..))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
-->
    <!-- 配置oracle数据源-->
    <bean id="oracle" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >

        <property name="driverClassName" >
            <value>${oracle.jdbc.driverClassName}</value>
        </property>
        <property name="url">
            <value>${oracle.jdbc.url}</value>
        </property>
        <property name="username">
            <value>${oracle.jdbc.username}</value>
        </property>
        <property name="password">
            <value>${oracle.jdbc.password}</value>
        </property>


        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />
        <!--

                <property name="maxWait" value="60000" />


                <property name="timeBetweenEvictionRunsMillis" value="60000" />


                <property name="minEvictableIdleTimeMillis" value="300000" />

                <property name="validationQuery" value="SELECT 'x'" />
                <property name="testWhileIdle" value="true" />
                <property name="testOnBorrow" value="false" />
                <property name="testOnReturn" value="false" />


                <property name="poolPreparedStatements" value="false" />
                <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />


                <property name="filters" value="stat" />
                -->
    </bean>
    <!-- MyIbatis -->
    <bean id="sqlSessionFactoryOracle" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="oracle"/>
        <property name="configLocation" value="classpath:myBatis.xml" />
        <property name="mapperLocations" value="classpath:com/cssweb/account/mapper/*.xml" />
    </bean>
    <!--MyIbatis接口映射器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryOracle" />
        <property name="basePackage" value="com.cssweb.account.mapper"/>
    </bean>
    <!-- 配置事务管理器 -->
    <bean id="transactionManagerOracle" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
        <property name="dataSource" ref="oracle" />
    </bean>
    <!--注解式事务-->
    <tx:annotation-driven transaction-manager="transactionManagerOracle"/>

    <!--Spring Session-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="127.0.0.1" />
        <property name="port" value="6379" />
        <property name="password" value="" />
        <property name="timeout" value="1800" />
        <property name="poolConfig" ref="jedisPoolConfig" />
        <property name="usePool" value="true" />
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
    </bean>
    <bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="30" />
    </bean>
</beans>
